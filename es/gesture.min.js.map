{"version":3,"file":"gesture.min.js","sources":["../src/emitter/index.ts","../src/utils/index.ts","../src/core/index.ts","../src/events/started.ts","../src/events/moved.ts","../src/events/ended.ts","../src/events/canceled.ts","../src/events/downed.ts","../src/events/wheeled.ts","../src/rawjs/index.ts","../node_modules/@huangjs888/lightdom/es/lightdom.min.js"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-14 09:46:11\n * @Description: ******\n */\n\ntype IEventHandler<E, T> = (event: E, type?: T) => boolean | void;\n\nexport default class EventEmitter<T extends string, E> {\n  events: {\n    [key in T]?: {\n      pool: Array<IEventHandler<E, T>>;\n      single: number;\n    };\n  } = {};\n  constructor() {\n    this.events = {};\n  }\n  one(type: T, handler: IEventHandler<E, T>, single?: boolean) {\n    const onceHandler =\n      typeof handler === 'function'\n        ? (...args: [E, T?]) => {\n            // 该事件只执行一次，执行完就解除事件\n            handler.apply(null, args);\n            this.off(type, onceHandler, single);\n          }\n        : handler;\n    this.on(type, onceHandler, single);\n  }\n  on(type: T, handler: IEventHandler<E, T>, single?: boolean) {\n    const events = this.events[type] || {\n      pool: [],\n      single: -1,\n    };\n    if (typeof handler === 'function') {\n      if (single) {\n        // 该事件只能注册一次，每次注册都会替换上次注册的，类似于dom属性事件赋值注册比如element.onclick = ()=>{}\n        if (events.single === -1) {\n          // 记录该单独事件在所有事件的位置\n          events.single = events.pool.push(handler) - 1;\n        } else {\n          events.pool[events.single] = handler;\n        }\n      } else {\n        // 该事件可以注册多次，执行时，会遍历全部事件全部执行，类似于dom的addEventListener\n        // 注册进去之前会检查是否有相同的处理程序，如果有，则不再添加（独立程序不参与）\n        let unregistered = true;\n        for (let i = 0, len = events.pool.length; i < len; i++) {\n          if (events.pool[i] === handler && i !== events.single) {\n            unregistered = false;\n            break;\n          }\n        }\n        if (unregistered) {\n          events.pool.push(handler);\n        }\n      }\n    } else if (single && events.single !== -1) {\n      // 需要把独立事件删除，相当于解绑独立事件\n      events.pool.splice(events.single, 1);\n      events.single = -1;\n    }\n    this.events[type] = events;\n  }\n  off(type?: T, handler?: IEventHandler<E, T>, single?: boolean) {\n    if (typeof type === 'undefined') {\n      // 没有type则删除全部事件\n      this.events = {};\n    } else if (typeof handler === 'undefined') {\n      // 删除type下的所有事件\n      delete this.events[type];\n    } else if (single) {\n      const events = this.events[type];\n      if (events && events.single !== -1) {\n        // 删除独立程序事件\n        events.pool.splice(events.single, 1);\n        events.single = -1;\n      }\n    } else {\n      const events = this.events[type];\n      if (events) {\n        // 检查并删除事件池内事件\n        for (let i = events.pool.length - 1; i >= 0; i--) {\n          if (events.pool[i] === handler && i !== events.single) {\n            events.pool.splice(i, 1);\n            // 因为相同事件只会有一个，所以删除后不需要再检查了\n            break;\n          }\n        }\n      }\n    }\n  }\n  emit(type: T, event: E) {\n    const events = this.events[type];\n    if (events) {\n      // 循环执行事件池里的事件\n      for (let i = 0, len = events.pool.length; i < len; i++) {\n        const handler = events.pool[i];\n        if (typeof handler === 'function') {\n          const immediatePropagation = handler.apply(null, [event, type]);\n          // 返回值为false，则阻止后于该事件注册的同类型事件触发\n          if (immediatePropagation === false) {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-12 11:41:28\n * @Description: ******\n */\n\nconst isCurrentTarget = (target: HTMLElement, currentTarget: HTMLElement) => {\n  let _target: HTMLElement | null = target;\n  while (_target && _target !== currentTarget) {\n    _target = _target.parentNode as HTMLElement;\n  }\n  return !!_target;\n};\n\nexport function fixOption(value: number | undefined, defaultValue: number, minVal: number) {\n  return typeof value !== 'number' || value < minVal ? defaultValue : value;\n}\n\nexport function isTouchable() {\n  return window.navigator.maxTouchPoints || 'ontouchstart' in window.document;\n}\n\nexport function getEventPoints(\n  event: any,\n  started: boolean = false,\n): {\n  points: { pageX: number; pageY: number; identifier: number }[];\n  isFirst?: boolean;\n} {\n  if (event.touches) {\n    if (started) {\n      const points = Array.prototype.filter\n        .call(event.touches, (t: any) =>\n          isCurrentTarget(t.target as HTMLElement, event.currentTarget as HTMLElement),\n        )\n        .map((t: any) => ({\n          pageX: t.pageX,\n          pageY: t.pageY,\n          identifier: t.identifier,\n        }));\n      return {\n        points,\n        isFirst: event.changedTouches.length === points.length,\n      };\n    }\n\n    return {\n      points: Array.prototype.slice.call(event.changedTouches || []).map((t: any) => ({\n        pageX: t.pageX,\n        pageY: t.pageY,\n        identifier: t.identifier,\n      })),\n    };\n  }\n  return {\n    points: [{ pageX: event.pageX, pageY: event.pageY, identifier: -1 }],\n    isFirst: started,\n  };\n}\n\nexport function getDistance([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n  }\n  return 0;\n}\n\nexport function getAngle([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    return (Math.atan2(y1 - y0, x1 - x0) * 180) / Math.PI;\n  }\n  return 0;\n}\n\nexport function getCenter([x0, y0]: number[], [x1, y1]: number[]) {\n  const ok0 = typeof x0 === 'number' && typeof y0 === 'number';\n  const ok1 = typeof x1 === 'number' && typeof y1 === 'number';\n  return !ok0 && !ok1\n    ? [0, 0]\n    : ok0 && !ok1\n    ? [x0, y0]\n    : !ok0 && ok1\n    ? [x1, y1]\n    : [(x0 + x1) / 2, (y0 + y1) / 2];\n}\n\nexport function getDirection([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    const x = x0 - x1;\n    const y = y0 - y1;\n    if (x !== y) {\n      return Math.abs(x) >= Math.abs(y)\n        ? x0 - x1 > 0\n          ? 'Left'\n          : 'Right'\n        : y0 - y1 > 0\n        ? 'Up'\n        : 'Down';\n    }\n  }\n  return 'None';\n}\n\nexport function getVelocity(deltaTime: number, distance: number) {\n  if (\n    typeof distance !== 'number' ||\n    distance === 0 ||\n    typeof deltaTime !== 'number' ||\n    deltaTime === 0\n  ) {\n    return 0;\n  }\n  return distance / deltaTime;\n}\n\n//根据数值，与水平夹角，计算x和y的分量值\nexport function getVector(value: number, angle: number) {\n  if (typeof value !== 'number' || typeof angle !== 'number') {\n    return [0, 0];\n  }\n  const rad = (angle * Math.PI) / 180;\n  return [value * Math.cos(rad), value * Math.sin(rad)];\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 09:36:07\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-14 09:43:35\n * @Description: ******\n */\n\nimport EventEmitter from '../emitter';\nimport { fixOption } from '../utils';\n\nclass Gesture extends EventEmitter<IGestureEventType, IGestureEvent> {\n  wheelDelay: number = 350;\n  longTapInterval: number = 750;\n  doubleTapInterval: number = 250;\n  doubleTapDistance: number = 30;\n  touchMoveDistance: number = 3;\n  swipeVelocity: number = 0.3;\n  swipeDuration: number = 100;\n  raiseDuration: number = 100;\n  _rotateAngle: number = 0;\n  _singleTapTimer: number = 0;\n  _longTapTimer: number = 0;\n  _wheelTimerEnd: {\n    scale: number;\n    timer: number;\n    wheelEnd: () => void;\n  } | null = null;\n  _preventTap: boolean = true;\n  _swipePoints: any[] | null = null;\n  _preventSingleTap: boolean = true;\n  _preventDoubleTap: boolean = true;\n  _firstPointer: IGesturePointer | null = null;\n  _pointer0: IGesturePointer | null = null;\n  _pointer1: IGesturePointer | null = null;\n  constructor(options?: IGestureOptions) {\n    super();\n    this.resetOptions(options);\n  }\n  resetOptions(options?: IGestureOptions) {\n    const {\n      wheelDelay,\n      longTapInterval,\n      doubleTapInterval,\n      doubleTapDistance,\n      touchMoveDistance,\n      swipeVelocity,\n      swipeDuration,\n      raiseDuration,\n    } = options || {};\n    this.wheelDelay = fixOption(wheelDelay, 350, 1);\n    this.longTapInterval = fixOption(longTapInterval, 750, 1);\n    this.doubleTapInterval = fixOption(doubleTapInterval, 250, 1);\n    this.doubleTapDistance = fixOption(doubleTapDistance, 30, 1);\n    this.touchMoveDistance = fixOption(touchMoveDistance, 3, 0);\n    this.swipeVelocity = fixOption(swipeVelocity, 0.3, 0);\n    this.swipeDuration = fixOption(swipeDuration, 100, 1);\n    this.raiseDuration = fixOption(raiseDuration, 100, 1);\n  }\n  preventAllTap(fp: boolean = true) {\n    this._preventTap = true;\n    this._preventSingleTap = true;\n    this._preventDoubleTap = true;\n    if (fp) {\n      this._firstPointer = null;\n    }\n    if (this._longTapTimer) {\n      clearTimeout(this._longTapTimer);\n      this._longTapTimer = 0;\n    }\n  }\n}\n\nexport type IGestureOptions = {\n  wheelDelay?: number; // 设置wheel等待时间，超时则认为结束滚动，单位ms\n  longTapInterval?: number; // 设置长按等待时间阈值，单位ms\n  doubleTapInterval?: number; // 设置双击时间间隔，单位ms\n  doubleTapDistance?: number; // 双击两次点击的位置距离触发阈值\n  touchMoveDistance?: number; // 移动阈值，超过这个值才算移动\n  swipeVelocity?: number; // swipe阶段的速率大于这个值才会触发swipe\n  swipeDuration?: number; // 移动过程中计入swipe的时间范围，即：最后一次移动事件向前推swipeDuration时间内，作为swipe阶段\n  raiseDuration?: number; // 最后一次移动到手指（点）抬起的时间间隔，小于这个值才会触发swipe\n};\n\nexport type IGestureDirection = 'Left' | 'Right' | 'Up' | 'Down' | 'None';\n\nexport type IGestureEventType =\n  | 'pan' // 平移\n  | 'tap' // 轻点（快，双击时会触发）\n  | 'swipe' // 快速滑动\n  | 'singleTap' // 点击（有延迟，双击时不触发）\n  | 'longTap' // 长按\n  | 'doubleTap' // 双击\n  | 'multiPan' // 平移\n  | 'scale' // 缩放\n  | 'rotate' // 旋转\n  | 'pointerStart' // 开始\n  | 'pointerMove' // 移动\n  | 'pointerEnd' // 抬起\n  | 'pointerCancel' // 触摸取消\n  | 'gestureStart' // 双（多）指开始\n  | 'gestureMove' // 双（多）指移动\n  | 'gestureEnd'; // 双（多）指结束\n\nexport type IGesturePointer = {\n  start: number[]; // 开始点\n  previous: number[]; // 上一个点\n  current: number[]; // 当前点\n  identifier: number; // 手指（点）id\n  changed: boolean; // 手指（点）是否变化\n};\n\nexport type IGestureEvent = {\n  pointers: IGesturePointer[]; // 当前停留在界面上的所有手指（点）\n  leavePointers: IGesturePointer[]; // 已经离开界面的所有手指（点）\n  getPoint: (whichOne?: 'start' | 'previous' | 'current') => number[]; // 获取当前点（两个点取中心值）参数是获取起点，还是当前点，还是移动时的上个点\n  scale?: number; // 缩放比例（和上一个点比较）\n  angle?: number; // 旋转角度（和上一个点比较）swipe角度\n  deltaX?: number; // x方向距离（和上一个点比较）\n  deltaY?: number; // y方向距离（和上一个点比较）\n  direction?: IGestureDirection; // 移动时的方向（和上一个点比较）swipe方向\n  moveScale?: number; // 缩放比例（和起点比较）\n  moveAngle?: number; // 旋转角度（和起点比较）\n  moveX?: number; // x方向距离（和起点比较）\n  moveY?: number; // y方向距离（和起点比较）\n  moveDirection?: IGestureDirection; // 移动时的方向（和起点比较）\n  velocity?: number; // swipe阶段速率（不是从起点到终点的速率）\n  waitTime?: number; // 长按等待时间\n  delayTime?: number; // 点击延迟时间\n  intervalTime?: number; // 双击间隔时间\n  swipeComputed?: (\n    factor: number,\n    _velocity?: number,\n  ) => {\n    duration: number; // swipe速率减到0花费的时间\n    stretchX: number; // x方向swipe惯性距离（抬起后，继续移动的距离）\n    stretchY: number; // y方向swipe惯性距离（抬起后，继续移动的距离）\n    deceleration: number; // swipe速率减到0的减速度\n  };\n  timestamp: number;\n  sourceEvent: any;\n};\n\nexport default Gesture;\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-06 12:01:41\n * @Description: ******\n */\n\nimport { getEventPoints, getDistance, getCenter } from '../utils';\nimport type Core from '../core';\nimport { type IGestureEvent } from '../core';\n\nexport default function started(this: Core, event: any) {\n  const newEvent: IGestureEvent = {\n    sourceEvent: event,\n    timestamp: Date.now(),\n    pointers: [],\n    leavePointers: [],\n    getPoint: () => [0, 0],\n  };\n  const { points, isFirst } = getEventPoints(event, true);\n  // 表示第一次放入手指（点）\n  if (isFirst) {\n    // 第一次点击，如果存在wheel没执行，需要执行掉\n    if (this._wheelTimerEnd) {\n      clearTimeout(this._wheelTimerEnd.timer);\n      this._wheelTimerEnd.wheelEnd();\n      this._wheelTimerEnd = null;\n    }\n    this._pointer0 = null;\n    this._pointer1 = null;\n  } else {\n    if (this._pointer0) {\n      this._pointer0.changed = false;\n    }\n    if (this._pointer1) {\n      this._pointer1.changed = false;\n    }\n  }\n  // 如果当前事件元素之外的屏幕上有手指（点），此时在事件元素上放一个手指（点），points会包含该手指（点）\n  // 循环保存放在屏幕上的手指（点），这里只会保存最多两个，忽略超过三个的手指（点）（只对单指和双指情形处理）\n  for (let i = 0, len = points.length; i < len; ++i) {\n    const t = points[i];\n    const p = [t.pageX, t.pageY];\n    const pointer = {\n      start: p,\n      previous: p,\n      current: p,\n      identifier: t.identifier,\n      changed: true,\n    };\n    if (!this._pointer0) {\n      this._pointer0 = pointer;\n    } else if (!this._pointer1 && this._pointer0.identifier !== t.identifier) {\n      this._pointer1 = pointer;\n    }\n  }\n  // 每次进入时先阻止所有单指事件\n  this.preventAllTap(false);\n  this._swipePoints = null;\n  this._rotateAngle = 0;\n  // 双指start\n  const pointer0 = this._pointer0;\n  const pointer1 = this._pointer1;\n  if (pointer1 && pointer0) {\n    this._firstPointer = null;\n    newEvent.pointers = [pointer0, pointer1];\n    newEvent.getPoint = () => getCenter(pointer0.current, pointer1.current);\n    this.emit('gestureStart', newEvent);\n  }\n  // 单指start\n  else if (pointer0) {\n    newEvent.pointers = [pointer0];\n    newEvent.getPoint = () => pointer0.current;\n    this._preventTap = false;\n    // 设置一个长按定时器\n    this._longTapTimer = +setTimeout(() => {\n      // 当前点击一旦长按超过longTapInterval则触发longTap，则松开后不会再触发所有单指事件\n      this._preventTap = true;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = true;\n      this._longTapTimer = 0;\n      this._firstPointer = null;\n      newEvent.waitTime = this.longTapInterval;\n      this.emit('longTap', newEvent);\n    }, this.longTapInterval);\n    const firstPointer = this._firstPointer;\n    const singleTapTimer = this._singleTapTimer;\n    if (\n      singleTapTimer &&\n      firstPointer &&\n      getDistance(firstPointer.current, pointer0.current) < this.doubleTapDistance\n    ) {\n      // 1，只要连续两次点击时间在doubleTapInterval之内，距离在doubleTapDistance内，无论第二次作何操作，都不会触发第一次的singleTap，但第一次的tap会触发\n      // 2，如果满足第一条时，第二次的点击有多根手指（点），或者长按触发longTap，则不会再触发doubleTap，第二次的tap，singleTap也不会触发\n      clearTimeout(singleTapTimer);\n      this._singleTapTimer = 0;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = false;\n      newEvent.getPoint = () => firstPointer.current;\n    } else {\n      this._firstPointer = pointer0;\n      // 表示是第一次点击或该次点击距离上一次点击时间超过doubleTapInterval，距离超过doubleTapDistance\n      this._preventSingleTap = false;\n      this._preventDoubleTap = true;\n    }\n  }\n  // 无指没有start\n  else {\n    return;\n  }\n  this.emit('pointerStart', newEvent);\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-13 12:34:31\n * @Description: ******\n */\n\nimport { getEventPoints, getDirection, getDistance, getAngle, getCenter } from '../utils';\nimport type Core from '../core';\nimport { type IGestureEvent } from '../core';\n\nexport default function moved(this: Core, event: any) {\n  const newEvent: IGestureEvent = {\n    sourceEvent: event,\n    timestamp: Date.now(),\n    pointers: [],\n    leavePointers: [],\n    getPoint: () => [0, 0],\n  };\n  if (this._pointer0) {\n    this._pointer0.changed = false;\n  }\n  if (this._pointer1) {\n    this._pointer1.changed = false;\n  }\n  // 循环更新手指（点）\n  const { points } = getEventPoints(event);\n  for (let i = 0, len = points.length; i < len; ++i) {\n    const t = points[i];\n    const p = [t.pageX, t.pageY];\n    if (this._pointer0 && this._pointer0.identifier === t.identifier) {\n      this._pointer0.changed = true;\n      this._pointer0.previous = this._pointer0.current;\n      this._pointer0.current = p;\n    } else if (this._pointer1 && this._pointer1.identifier === t.identifier) {\n      this._pointer1.changed = true;\n      this._pointer1.previous = this._pointer1.current;\n      this._pointer1.current = p;\n    }\n  }\n  // 手指（点）移动至少要有一个手指（点）移动超过touchMoveDistance才会触发移动事件\n  const pointer0 = this._pointer0;\n  const pointer1 = this._pointer1;\n  if (\n    (pointer0 && getDistance(pointer0.start, pointer0.current) > this.touchMoveDistance) ||\n    (pointer1 && getDistance(pointer1.start, pointer1.current) > this.touchMoveDistance)\n  ) {\n    // 一旦移动，则阻止所有单指点击相关事件（除了swipe）\n    this.preventAllTap();\n    // 双指移动情况\n    if (pointer1 && pointer0) {\n      newEvent.pointers = [pointer0, pointer1];\n      const { start: start0, previous: previous0, current: current0 } = pointer0;\n      const { start: start1, previous: previous1, current: current1 } = pointer1;\n      // 双指平移\n      const eCenter = getCenter(current0, current1);\n      const mCenter = getCenter(previous0, previous1);\n      const sCenter = getCenter(start0, start1);\n      newEvent.getPoint = (whichOne) =>\n        whichOne === 'start' ? sCenter : whichOne === 'previous' ? mCenter : eCenter;\n      newEvent.direction = getDirection(mCenter, eCenter);\n      newEvent.moveDirection = getDirection(sCenter, eCenter);\n      newEvent.deltaX = eCenter[0] - mCenter[0];\n      newEvent.moveX = eCenter[0] - sCenter[0];\n      newEvent.deltaY = eCenter[1] - mCenter[1];\n      newEvent.moveY = eCenter[1] - sCenter[1];\n      // 只有双指滑动时才会触发下面事件\n      const eDistance = getDistance(current0, current1);\n      const mDistance = getDistance(previous0, previous1);\n      const sDistance = getDistance(start0, start1);\n      if (sDistance > 0 && eDistance > 0 && mDistance > 0) {\n        // 双指缩放\n        newEvent.scale = eDistance / mDistance;\n        newEvent.moveScale = eDistance / sDistance;\n      }\n      const eAngle = getAngle(current0, current1);\n      const mAngle = getAngle(previous0, previous1);\n      // const sAngle = getAngle(start0, start1);\n      // 这里计算的三个angle均是向量（第一个参数为起点，第二个为终点）与x正半轴之间的夹角\n      // 方向朝向y轴正半轴的为正值[0,180]，朝向y轴负半轴的为负值[-180,0]\n      // 注意，这里坐标轴是页面坐标，x轴向右正方向，y轴向下正方向，原点在左上角\n      let angle = eAngle - mAngle;\n      if (angle < -180) {\n        // 此种情况属于顺时针转动时mAngle突然由正变为负值（比如由178度顺时针旋转4度都-178度）\n        // 这种情况，因为eAngle和mAngle是两次相邻的移动事件，间隔角度很小（4度）而不会是很大的（-356度）\n        angle += 360;\n      } else if (angle > 180) {\n        // 和上面相反逆时针转动（比如由-178逆时针旋转4度到178）\n        angle -= 360;\n      }\n      // 双指旋转本次和上一次的角度，正值顺时针，负值逆时针\n      newEvent.angle = angle;\n      // 双指旋转起点到终点的总旋转角度，正值顺时针，负值逆时针\n      // 这里不能直接使用eAngle-sAngle，否则顺逆时针分不清，需要通过angle累加\n      this._rotateAngle += angle;\n      newEvent.moveAngle = this._rotateAngle;\n      this.emit('rotate', newEvent);\n      if (sDistance > 0 && eDistance > 0 && mDistance > 0) {\n        this.emit('scale', newEvent);\n      }\n      this.emit('multiPan', newEvent);\n      this.emit('gestureMove', newEvent);\n    }\n    // 单指移动\n    else if (pointer0) {\n      newEvent.pointers = [pointer0];\n      const { start, previous, current } = pointer0;\n      newEvent.getPoint = (whichOne) =>\n        whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n      newEvent.direction = getDirection(previous, current);\n      newEvent.moveDirection = getDirection(start, current);\n      newEvent.deltaX = current[0] - previous[0];\n      newEvent.moveX = current[0] - start[0];\n      newEvent.deltaY = current[1] - previous[1];\n      newEvent.moveY = current[1] - start[1];\n      const _timestamp = Date.now();\n      // 第一次移动this._swipePoints为null\n      const _swipePoints = this._swipePoints || [[], []];\n      const _duration = _timestamp - ((_swipePoints[1][0] ? _swipePoints[1][0].timestamp : 0) || 0);\n      // 当前时间与本阶段初始时间之差大于计入swipe的时间(swipeDuration)，则本阶段过时，下阶段开启\n      if (_duration > this.swipeDuration) {\n        // 将本阶段作为上一阶段，开启下一阶段作为本阶段\n        _swipePoints[0] = _swipePoints[1];\n        _swipePoints[1] = [];\n      }\n      // 将当前移动点和时间存入本阶段\n      _swipePoints[1].push({\n        point: current,\n        timestamp: _timestamp,\n      });\n      this._swipePoints = _swipePoints;\n      // 触发单指平移事件\n      this.emit('pan', newEvent);\n    }\n    // 无指无移动\n    else {\n      return;\n    }\n    this.emit('pointerMove', newEvent);\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-06 14:45:49\n * @Description: ******\n */\n\nimport {\n  getEventPoints,\n  getDirection,\n  getDistance,\n  getAngle,\n  getCenter,\n  getVelocity,\n  getVector,\n} from '../utils';\nimport type Core from '../core';\nimport { type IGestureEvent, type IGesturePointer } from '../core';\n\nexport default function ended(this: Core, event: any) {\n  const newEvent: IGestureEvent = {\n    sourceEvent: event,\n    timestamp: Date.now(),\n    pointers: [],\n    leavePointers: [],\n    getPoint: () => [0, 0],\n  };\n  // 临时保存当前手指（点）\n  let pointer0: IGesturePointer | null = null;\n  let pointer1: IGesturePointer | null = null;\n  if (this._pointer0) {\n    this._pointer0.changed = false;\n  }\n  if (this._pointer1) {\n    this._pointer1.changed = false;\n  }\n  // 循环删除已经拿开的手指（点）\n  const { points } = getEventPoints(event);\n  for (let i = 0, len = points.length; i < len; ++i) {\n    const t = points[i];\n    if (this._pointer0 && this._pointer0.identifier === t.identifier) {\n      this._pointer0.changed = true;\n      pointer0 = this._pointer0;\n      this._pointer0 = null;\n    } else if (this._pointer1 && this._pointer1.identifier === t.identifier) {\n      this._pointer1.changed = true;\n      pointer1 = this._pointer1;\n      this._pointer1 = null;\n    }\n  }\n  // 双指变单指\n  if (this._pointer1 && !this._pointer0) {\n    this._pointer0 = this._pointer1;\n    this._pointer1 = null;\n    pointer1 = pointer0;\n    pointer0 = null;\n  }\n  // 松开时清除longTapTimer（一旦松开就不存在长按，当然有可能已经发生过了）\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = 0;\n  }\n  // 仍然存在至少一根手指（点）\n  if (this._pointer0) {\n    newEvent.pointers = [this._pointer0];\n    if (this._pointer1) {\n      // 剩余两指\n      newEvent.pointers.push(this._pointer1);\n    } else if (pointer1) {\n      // 剩余一指\n      newEvent.leavePointers = [pointer1];\n      this._rotateAngle = 0;\n    }\n    const start = getCenter(\n      this._pointer0.start,\n      this._pointer1 ? this._pointer1.start : pointer1 ? pointer1.start : [],\n    );\n    const previous = getCenter(\n      this._pointer0.previous,\n      this._pointer1 ? this._pointer1.previous : pointer1 ? pointer1.previous : [],\n    );\n    const current = getCenter(\n      this._pointer0.current,\n      this._pointer1 ? this._pointer1.current : pointer1 ? pointer1.current : [],\n    );\n    newEvent.getPoint = (whichOne) =>\n      whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n    this.emit('gestureEnd', newEvent);\n  }\n  // 全部拿开\n  else if (pointer0) {\n    // 多指的最后一指抬起，仅仅一指抬起\n    newEvent.leavePointers = [pointer0];\n    if (pointer1) {\n      // 双指同时抬起\n      newEvent.leavePointers.push(pointer1);\n    }\n    const start = pointer1 ? getCenter(pointer0.start, pointer1.start) : pointer0.start;\n    const previous = pointer1 ? getCenter(pointer0.previous, pointer1.previous) : pointer0.previous;\n    const current = pointer1 ? getCenter(pointer0.current, pointer1.current) : pointer0.current;\n    newEvent.getPoint = (whichOne) =>\n      whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n    if (!this._preventTap) {\n      this.emit('tap', newEvent);\n      this._preventTap = true;\n    }\n    if (!this._preventSingleTap) {\n      // 等待doubleTapInterval，如果时间内没有点击第二次，则触发\n      this._singleTapTimer = +setTimeout(() => {\n        this._singleTapTimer = 0;\n        newEvent.delayTime = this.doubleTapInterval;\n        this.emit('singleTap', newEvent);\n      }, this.doubleTapInterval);\n      this._preventSingleTap = true;\n    }\n    if (!this._preventDoubleTap) {\n      // 双击点使用第一次的点\n      const firstPointer = this._firstPointer;\n      if (firstPointer) {\n        newEvent.getPoint = () => firstPointer.current;\n      }\n      newEvent.intervalTime = this.doubleTapInterval;\n      this.emit('doubleTap', newEvent);\n      this._firstPointer = null;\n      this._preventDoubleTap = true;\n    }\n    // this._swipePoints存在表示开始了swipe行为\n    if (this._swipePoints) {\n      const [prev, next] = this._swipePoints;\n      // 最后一次移动的点即为swipe终点\n      const endPos = next[next.length - 1];\n      // 最后一次移动点的时间减去手指（点）抬起的时间，此间隔时间需小于等待时间raiseDuration，否则视为停止swipe\n      if (Date.now() - endPos.timestamp <= this.raiseDuration) {\n        // 找到计入swipe的时间(swipeDuration)内的swipe起点\n        let startPos = next[0];\n        for (let i = prev.length - 1; i >= 0; i--) {\n          if (endPos.timestamp - prev[i].timestamp <= this.swipeDuration) {\n            startPos = prev[i];\n          } else {\n            break;\n          }\n        }\n        // 根据swipe起点和终点的距离差与时间差算出swipe抬起时速率\n        const velocity = getVelocity(\n          endPos.timestamp - startPos.timestamp,\n          getDistance(startPos.point, endPos.point),\n        );\n        // swipe速率需要大于swipeVelocity，否则忽略不计，不视为swipe\n        if (velocity > this.swipeVelocity) {\n          // 滑动方向与x夹角\n          const angle = getAngle(startPos.point, endPos.point);\n          // 惯性的方向\n          newEvent.direction = getDirection(startPos.point, endPos.point);\n          newEvent.angle = angle;\n          newEvent.velocity = velocity;\n          // 给出按照velocity速度滑动，当速度减到0时的计算函数：\n          // 当给出时间t，即在t时间内速度减到0，求出滑动的距离：\n          // 当给出减速度a，即在减速度a的作用下，速度减到0，求出滑动的距离，和消耗的时间：\n          // 减速度某个时间的位移：s = v0 * t - (a * t * t) / 2\n          // 减速度某个时间的速度：v = v0 - a * t\n          // s为滑动距离，v末速度为0，v0初速度为velocity\n          newEvent.swipeComputed = (factor: number, _velocity: number = velocity) => {\n            // 因子大于1可以认为传入的是时间毫秒数\n            let duration = 0;\n            let deceleration = 0;\n            let distance = 0;\n            if (factor > 1) {\n              duration = factor;\n              deceleration = _velocity / duration;\n              distance = (_velocity * duration) / 2;\n            }\n            // 因子小于1可以认为传入的是减速度（减速如果大于1一般太大了，不符合使用场景）\n            else if (factor > 0) {\n              deceleration = factor;\n              duration = _velocity / deceleration;\n              distance = (_velocity * _velocity) / (2 * deceleration);\n            }\n            const [stretchX, stretchY] = getVector(distance, angle);\n            return {\n              duration, // swipe速率减到0花费的时间\n              stretchX, // x方向swipe惯性距离（抬起后，继续移动的距离）\n              stretchY, // y方向swipe惯性距离（抬起后，继续移动的距离）\n              deceleration, // swipe速率减到0的减速度\n            };\n          };\n          /**\n           * swipe思路:\n           * 根据移动停止前swipeDuration时间内移动的距离和时间算出速度，\n           * 速度大于swipeVelocity，并且移动停止后到手指（点）抬起时间间隔小于raiseDuration即为swipe\n           * 移动停止就是最后一次触发move事件\n           * 0. start 清空_swipePoints\n           * 1. move 每swipeDuration时间内所移动的点分为一组，只保留上一次swipeDuration时间组和这一次swipeDuration时间组，存储在_swipePoints内\n           * 2. end 松开手时, 在_swipePoints内找到起终点，根据起终点距离和时间差算出速度，然后算出其他值\n           */\n          this.emit('swipe', newEvent);\n          this._swipePoints = null;\n        }\n      }\n    }\n  }\n  this.emit('pointerEnd', newEvent);\n  /* // 只剩下一根在上面了，以下事件交给用户自行放在pointerEnd事件里自行判断\n  if (this._pointer0 && !this._pointer1) {\n    // 双指抬起，只剩下一指，此时就认为该点是移动的起点（否则会把双指移动的起点作为起点，移动时会出现跳跃）\n    this._pointer0.start = this._pointer0.previous = this._pointer0.current;\n    // 同时可以触发一次start事件\n    newEvent.pointers = [this._pointer0];\n    newEvent.pointer = this._pointer0;\n    this.emit('pointerStart', newEvent);\n  } */\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-06 15:23:25\n * @Description: ******\n */\n\nimport ended from './ended';\nimport type Core from '../core';\n\nexport default function canceled(this: Core, event: any) {\n  this.emit('pointerCancel', {\n    sourceEvent: event,\n    timestamp: Date.now(),\n    pointers: [],\n    leavePointers: [],\n    getPoint: () => [0, 0],\n  });\n  ended.apply(this, [event]);\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-06 15:22:21\n * @Description: ******\n */\n\nimport started from './started';\nimport moved from './moved';\nimport ended from './ended';\nimport { getDirection } from '../utils';\nimport type Core from '../core';\nimport { type IGestureEvent } from '../core';\n\nexport default function downed(this: Core, event: any) {\n  const that = this;\n  if (typeof window !== 'undefined') {\n    window.addEventListener('mousemove', mousemoved);\n    window.addEventListener('mouseup', mouseupped);\n    window.addEventListener('blur', blured);\n    window.addEventListener('dragstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n    if ('onselectstart' in window.document.documentElement) {\n      window.addEventListener('selectstart', dragstarted, {\n        capture: true,\n        passive: false,\n      });\n    }\n  }\n  function unbind() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mousemove', mousemoved);\n      window.removeEventListener('mouseup', mouseupped);\n      window.removeEventListener('blur', blured);\n      window.removeEventListener('dragstart', dragstarted);\n      if ('onselectstart' in window.document.documentElement) {\n        window.removeEventListener('selectstart', dragstarted);\n      }\n    }\n  }\n  function blured(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    unbind();\n  }\n  function dragstarted(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  function mousemoved(e: MouseEvent) {\n    if (event.button === 0) {\n      moved.apply(that, [e]);\n    } else {\n      const newEvent: IGestureEvent = {\n        sourceEvent: event,\n        timestamp: Date.now(),\n        pointers: [],\n        leavePointers: [],\n        getPoint: () => [0, 0],\n      };\n      const point = [e.pageX, e.pageY];\n      if (that._pointer0) {\n        that._pointer0.previous = that._pointer0.current;\n        that._pointer0.current = point;\n        newEvent.pointers = [that._pointer0];\n        const { start, previous, current } = that._pointer0;\n        newEvent.getPoint = (whichOne) =>\n          whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n        newEvent.direction = getDirection(previous, current);\n        newEvent.moveDirection = getDirection(start, current);\n        newEvent.deltaX = current[0] - previous[0];\n        newEvent.moveX = current[0] - start[0];\n        newEvent.deltaY = current[1] - previous[1];\n        newEvent.moveY = current[1] - start[1];\n        // 根据移动距离计算：1度 = 4px; 正值顺时针，负值逆时针\n        newEvent.angle = newEvent.deltaX / 4;\n        newEvent.moveAngle = newEvent.moveX / 4;\n        that.emit('rotate', newEvent);\n      }\n    }\n  }\n  function mouseupped(e: MouseEvent) {\n    unbind();\n    if (event.button === 0) {\n      ended.apply(that, [e]);\n    } else {\n      const newEvent: IGestureEvent = {\n        sourceEvent: event,\n        timestamp: Date.now(),\n        pointers: [],\n        leavePointers: [],\n        getPoint: () => [0, 0],\n      };\n      const point = [e.pageX, e.pageY];\n      if (that._pointer0) {\n        const pointer0 = that._pointer0;\n        that._pointer0 = null;\n        pointer0.previous = pointer0.current;\n        pointer0.current = point;\n        newEvent.leavePointers = [pointer0];\n        const { start, previous, current } = pointer0;\n        newEvent.getPoint = (whichOne) =>\n          whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n      }\n      newEvent.angle = 0 / 0;\n      that.emit('rotate', newEvent);\n    }\n  }\n  if (event.button === 0) {\n    started.apply(that, [event]);\n  } else {\n    // 如果存在wheel没执行，需要执行掉\n    if (that._wheelTimerEnd) {\n      clearTimeout(that._wheelTimerEnd.timer);\n      that._wheelTimerEnd.wheelEnd();\n      that._wheelTimerEnd = null;\n    }\n    const point = [event.pageX, event.pageY];\n    that._pointer0 = {\n      start: point,\n      previous: point,\n      current: point,\n      identifier: -1,\n      changed: true,\n    };\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 11:27:38\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-06 15:38:35\n * @Description: ******\n */\n\nimport type Core from '../core';\nimport { type IGestureEvent } from '../core';\n\nexport default function wheeled(this: Core, event: any) {\n  const newEvent: IGestureEvent = {\n    sourceEvent: event,\n    timestamp: Date.now(),\n    pointers: [],\n    leavePointers: [],\n    getPoint: () => [0, 0],\n  };\n  const point = [event.pageX, event.pageY];\n  if (this._wheelTimerEnd) {\n    if (this._pointer0) {\n      this._pointer0.previous = this._pointer0.current;\n      this._pointer0.current = point;\n    }\n    clearTimeout(this._wheelTimerEnd.timer);\n    // wheelRoll\n  } else {\n    this._pointer0 = {\n      start: point,\n      previous: point,\n      current: point,\n      identifier: -1,\n      changed: true,\n    };\n    // wheelstart\n  }\n  const wheelEnd = () => {\n    this._pointer0 = null;\n    this._wheelTimerEnd = null;\n    newEvent.timestamp = Date.now();\n    // 表示滚轮结束，不参与计算\n    newEvent.scale = 0 / 0;\n    this.emit('scale', newEvent);\n    // wheelEnd\n  };\n  this._wheelTimerEnd = {\n    wheelEnd,\n    timer: +setTimeout(wheelEnd, this.wheelDelay),\n    scale: this._wheelTimerEnd ? this._wheelTimerEnd.scale : 1,\n  };\n  if (this._pointer0) {\n    newEvent.pointers = [this._pointer0];\n    const { start, previous, current } = this._pointer0;\n    newEvent.getPoint = (whichOne) =>\n      whichOne === 'start' ? start : whichOne === 'previous' ? previous : current;\n    const scale = Math.pow(\n      2,\n      -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002),\n    );\n    this._wheelTimerEnd.scale *= scale;\n    newEvent.moveScale = this._wheelTimerEnd.scale;\n    newEvent.scale = scale;\n    this.emit('scale', newEvent);\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-08-23 09:36:07\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-10-10 13:54:36\n * @Description: ******\n */\n\nimport { type IElement, getElement } from '@huangjs888/lightdom';\nimport Core, { type IGestureOptions } from '../core';\nimport { started, moved, ended, canceled, downed, wheeled } from '../events';\nimport { isTouchable } from '../utils';\n\nclass Gesture extends Core {\n  element: Element | null = null;\n  _unbind: (() => void) | null = null;\n  constructor(element: IElement, options?: IGestureOptions) {\n    super(options);\n    const _element = getElement(element);\n    if (!_element) {\n      throw new Error('Please pass in a valid element...');\n    }\n    this.element = _element;\n    // 注册触摸事件\n    if (isTouchable()) {\n      const touchstarted = started.bind(this);\n      const touchmoved = moved.bind(this);\n      const touchended = ended.bind(this);\n      const touchcanceled = canceled.bind(this);\n      _element.addEventListener('touchstart', touchstarted, false);\n      _element.addEventListener('touchmove', touchmoved, false);\n      _element.addEventListener('touchend', touchended, false);\n      _element.addEventListener('touchcancel', touchcanceled, false);\n      this._unbind = () => {\n        _element.removeEventListener('touchstart', touchstarted);\n        _element.removeEventListener('touchmove', touchmoved);\n        _element.removeEventListener('touchend', touchended);\n        _element.removeEventListener('touchcancel', touchcanceled);\n      };\n    } else {\n      // 注册触摸事件\n      const mousedowned = downed.bind(this);\n      const mousewheeled = wheeled.bind(this);\n      _element.addEventListener('mousedown', mousedowned, false);\n      _element.addEventListener('wheel', mousewheeled, false);\n      this._unbind = () => {\n        _element.removeEventListener('mousedown', mousedowned);\n        _element.removeEventListener('wheel', mousewheeled);\n      };\n    }\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 解除手势事件\n    if (this._unbind) {\n      this._unbind();\n      this._unbind = null;\n      this.element = null;\n    }\n  }\n}\n\nexport * from '../core';\n\nexport { isTouchable };\n\nexport default Gesture;\n","let e;function t(t){if(\"undefined\"==typeof document)return 0;if(t||void 0===e){const t=document.createElement(\"div\");t.style.width=\"100%\",t.style.height=\"200px\";const n=document.createElement(\"div\"),o=n.style;o.position=\"absolute\",o.top=\"0\",o.left=\"0\",o.pointerEvents=\"none\",o.visibility=\"hidden\",o.width=\"200px\",o.height=\"150px\",o.overflow=\"hidden\",n.appendChild(t),document.body.appendChild(n);const i=t.offsetWidth;n.style.overflow=\"scroll\";let r=t.offsetWidth;i===r&&(r=n.clientWidth),document.body.removeChild(n),e=i-r}return e}function n(e){const n=e.match(/^(.*)px$/),o=Number(null==n?void 0:n[1]);return Number.isNaN(o)?t():o}function o(e){return e.replace(/([A-Z])/g,\"-$1\").toLocaleLowerCase()}function i(e){return e.replace(/-(.?)/g,(e=>e.replace(\"-\",\"\").toLocaleUpperCase()))}function r(e){if(\"boolean\"==typeof e){const n=t(e);return{width:n,height:n}}if(!(\"undefined\"!=typeof document&&e&&e instanceof Element))return{width:0,height:0};const{width:o,height:i}=getComputedStyle(e,\"::-webkit-scrollbar\");return{width:n(o),height:n(i)}}function c(){return document.body.scrollHeight>(window.innerHeight||document.documentElement.clientHeight)&&window.innerWidth>document.body.offsetWidth}function d(e,t){let n=document.querySelector(\"#\"+e);n||(n=document.createElement(\"style\"),n.id=e,n.appendChild(document.createTextNode(t)),(document.head||document.getElementsByTagName(\"head\")[0]).appendChild(n))}const l=/^(?:-border(?:-top|-right|-bottom|-left)?(?:-width|)|(?:-margin|-padding)?(?:-top|-right|-bottom|-left)?|(?:-min|-max)?(?:-width|-height))$/;function s(e,t){if(e&&t){let n=\"\";Object.keys(t).forEach((i=>{const r=o(i),c=t[i];if(c||0===c){const e=\"number\"==typeof c&&/^[a-z]/.test(r)&&l.test(\"-\"+r)?\"px\":\"\";n+=`${r}: ${c}${e};`}else e.style.removeProperty(r)})),e.style.cssText+=n}return e}function u(e,t){return!(!e||!t)&&e.classList.contains(t)}function a(e,t){return e&&t&&(Array.isArray(t)?t:t.split(\" \")).forEach((t=>t&&e.classList.add(t))),e}function h(e,t){return e&&t&&(Array.isArray(t)?t:t.split(\" \")).forEach((t=>t&&e.classList.remove(t))),e}function f(e){let t=e;return\"string\"==typeof e&&(t=document.querySelector(e)),\"function\"==typeof e&&(t=e()),t||null}function m(e,t,n,i){var r;let c,d,l,u;\"string\"==typeof e?(c=e,d=t||{},l=Array.isArray(n)?n:[n],u=i):(c=\"div\",d=e||{},l=Array.isArray(t)?t:[t],u=n);const h=s(a(document.createElement(c),d.className),d.style),m=d.attrs||{};return Object.keys(m).forEach((e=>{const t=o(e);\"innerHTML\"!==e&&\"className\"!==e&&\"style\"!==e&&t in h&&(h[t]=m[e])})),l.forEach((e=>{e instanceof Element?null==h||h.appendChild(e):h&&null!=e&&(h.innerHTML=e+\"\")})),null==(r=f(u))||r.appendChild(h),h}export{a as addClass,m as createElement,d as cssInject,f as getElement,r as getScrollBarSize,u as hasClass,o as humpToHyphen,i as hyphenToHump,c as isBodyOverflowing,h as removeClass,s as setStyle};\n//# sourceMappingURL=lightdom.min.js.map\n"],"names":["EventEmitter","constructor","this","events","one","type","handler","single","onceHandler","args","apply","off","on","pool","push","unregistered","i","len","length","splice","emit","event","isCurrentTarget","target","currentTarget","_target","parentNode","fixOption","value","defaultValue","minVal","isTouchable","window","navigator","maxTouchPoints","document","getEventPoints","started","touches","points","Array","prototype","filter","call","t","map","pageX","pageY","identifier","isFirst","changedTouches","slice","getDistance","x0","y0","x1","y1","Math","sqrt","pow","getAngle","atan2","PI","getCenter","ok0","ok1","getDirection","x","y","abs","options","super","wheelDelay","longTapInterval","doubleTapInterval","doubleTapDistance","touchMoveDistance","swipeVelocity","swipeDuration","raiseDuration","_rotateAngle","_singleTapTimer","_longTapTimer","_wheelTimerEnd","_preventTap","_swipePoints","_preventSingleTap","_preventDoubleTap","_firstPointer","_pointer0","_pointer1","resetOptions","preventAllTap","fp","clearTimeout","newEvent","sourceEvent","timestamp","Date","now","pointers","leavePointers","getPoint","timer","wheelEnd","changed","p","pointer","start","previous","current","pointer0","pointer1","setTimeout","waitTime","firstPointer","singleTapTimer","moved","start0","previous0","current0","start1","previous1","current1","eCenter","mCenter","sCenter","whichOne","direction","moveDirection","deltaX","moveX","deltaY","moveY","eDistance","mDistance","sDistance","scale","moveScale","angle","moveAngle","_timestamp","point","ended","delayTime","intervalTime","prev","next","endPos","startPos","velocity","deltaTime","distance","swipeComputed","factor","_velocity","duration","deceleration","stretchX","stretchY","rad","cos","sin","getVector","canceled","downed","that","unbind","removeEventListener","mousemoved","mouseupped","blured","dragstarted","documentElement","e","preventDefault","stopPropagation","button","addEventListener","capture","passive","wheeled","deltaMode","Gesture","Core","element","_unbind","_element","querySelector","getElement","Error","touchstarted","bind","touchmoved","touchended","touchcanceled","mousedowned","mousewheeled","destory"],"mappings":"AAUe,MAAMA,EAOnBC,WAAAA,GAAcC,KANdC,OAKI,GAEFD,KAAKC,OAAS,EAChB,CACAC,GAAAA,CAAIC,EAASC,EAA8BC,GACzC,MAAMC,EACe,mBAAZF,EACH,IAAIG,KAEFH,EAAQI,MAAM,KAAMD,GACpBP,KAAKS,IAAIN,EAAMG,EAAaD,EAAO,EAErCD,EACNJ,KAAKU,GAAGP,EAAMG,EAAaD,EAC7B,CACAK,EAAAA,CAAGP,EAASC,EAA8BC,GACxC,MAAMJ,EAASD,KAAKC,OAAOE,IAAS,CAClCQ,KAAM,GACNN,QAAS,GAEX,GAAuB,mBAAZD,EACT,GAAIC,GAEqB,IAAnBJ,EAAOI,OAETJ,EAAOI,OAASJ,EAAOU,KAAKC,KAAKR,GAAW,EAE5CH,EAAOU,KAAKV,EAAOI,QAAUD,MAE1B,CAGL,IAAIS,GAAe,EACnB,IAAK,IAAIC,EAAI,EAAGC,EAAMd,EAAOU,KAAKK,OAAYD,EAAJD,EAASA,IACjD,GAAIb,EAAOU,KAAKG,KAAOV,GAAWU,IAAMb,EAAOI,OAAQ,CACrDQ,GAAe,EACf,KACF,CAEEA,GACFZ,EAAOU,KAAKC,KAAKR,EAErB,MACSC,IAA6B,IAAnBJ,EAAOI,SAE1BJ,EAAOU,KAAKM,OAAOhB,EAAOI,OAAQ,GAClCJ,EAAOI,QAAU,GAEnBL,KAAKC,OAAOE,GAAQF,CACtB,CACAQ,GAAAA,CAAIN,EAAUC,EAA+BC,GAC3C,QAAoB,IAATF,EAETH,KAAKC,OAAS,QACT,QAAuB,IAAZG,SAETJ,KAAKC,OAAOE,QACd,GAAIE,EAAQ,CACjB,MAAMJ,EAASD,KAAKC,OAAOE,GACvBF,IAA6B,IAAnBA,EAAOI,SAEnBJ,EAAOU,KAAKM,OAAOhB,EAAOI,OAAQ,GAClCJ,EAAOI,QAAU,EAErB,KAAO,CACL,MAAMJ,EAASD,KAAKC,OAAOE,GAC3B,GAAIF,EAEF,IAAK,IAAIa,EAAIb,EAAOU,KAAKK,OAAS,EAAGF,GAAK,EAAGA,IAC3C,GAAIb,EAAOU,KAAKG,KAAOV,GAAWU,IAAMb,EAAOI,OAAQ,CACrDJ,EAAOU,KAAKM,OAAOH,EAAG,GAEtB,KACF,CAGN,CACF,CACAI,IAAAA,CAAKf,EAASgB,GACZ,MAAMlB,EAASD,KAAKC,OAAOE,GAC3B,GAAIF,EAEF,IAAK,IAAIa,EAAI,EAAGC,EAAMd,EAAOU,KAAKK,OAAYD,EAAJD,EAASA,IAAK,CACtD,MAAMV,EAAUH,EAAOU,KAAKG,GAC5B,GAAuB,mBAAZV,EAAwB,CAGjC,IAA6B,IAFAA,EAAQI,KAAM,KAAOW,EAAOhB,GAGvD,KAEJ,CACF,CAEJ,ECrGF,MAAMiB,EAAkBA,CAACC,EAAqBC,KAC5C,IAAIC,EAA8BF,EAClC,KAAOE,GAAWA,IAAYD,GAC5BC,EAAUA,EAAQC,WAEpB,QAASD,CAAO,EAGX,SAASE,EAAUC,EAA2BC,EAAsBC,GACzE,MAAwB,iBAAVF,GAA8BE,EAARF,EAAiBC,EAAeD,CACtE,CAEO,SAASG,IACd,OAAOC,OAAOC,UAAUC,gBAAkB,iBAAkBF,OAAOG,QACrE,CAEO,SAASC,EACdf,EACAgB,GAAmB,GAKnB,GAAIhB,EAAMiB,QAAS,CACjB,GAAID,EAAS,CACX,MAAME,EAASC,MAAMC,UAAUC,OAC5BC,KAAKtB,EAAMiB,SAAUM,GACpBtB,EAAgBsB,EAAErB,OAAuBF,EAAMG,iBAEhDqB,KAAKD,IAAY,CAChBE,MAAOF,EAAEE,MACTC,MAAOH,EAAEG,MACTC,WAAYJ,EAAEI,eAElB,MAAO,CACLT,SACAU,QAAS5B,EAAM6B,eAAehC,SAAWqB,EAAOrB,OAEpD,CAEA,MAAO,CACLqB,OAAQC,MAAMC,UAAUU,MAAMR,KAAKtB,EAAM6B,gBAAkB,IAAIL,KAAKD,IAAY,CAC9EE,MAAOF,EAAEE,MACTC,MAAOH,EAAEG,MACTC,WAAYJ,EAAEI,eAGpB,CACA,MAAO,CACLT,OAAQ,CAAC,CAAEO,MAAOzB,EAAMyB,MAAOC,MAAO1B,EAAM0B,MAAOC,YAAa,IAChEC,QAASZ,EAEb,CAEO,SAASe,GAAaC,EAAIC,IAAgBC,EAAIC,IACnD,MACgB,iBAAPH,GACO,iBAAPE,GACO,iBAAPD,GACO,iBAAPE,EAEAC,KAAKC,KAAKD,KAAKE,IAAIJ,EAAKF,EAAI,GAAKI,KAAKE,IAAIH,EAAKF,EAAI,IAErD,CACT,CAEO,SAASM,GAAUP,EAAIC,IAAgBC,EAAIC,IAChD,MACgB,iBAAPH,GACO,iBAAPE,GACO,iBAAPD,GACO,iBAAPE,EAEgC,IAA/BC,KAAKI,MAAML,EAAKF,EAAIC,EAAKF,GAAaI,KAAKK,GAE9C,CACT,CAEO,SAASC,GAAWV,EAAIC,IAAgBC,EAAIC,IACjD,MAAMQ,EAAoB,iBAAPX,GAAiC,iBAAPC,EACvCW,EAAoB,iBAAPV,GAAiC,iBAAPC,EAC7C,OAAQQ,GAAQC,EAEZD,IAAQC,EACR,CAACZ,EAAIC,IACJU,GAAOC,EACR,CAACV,EAAIC,GACL,EAAEH,EAAKE,GAAM,GAAID,EAAKE,GAAM,GAL5B,CAAC,EAAG,EAMV,CAEO,SAASU,GAAcb,EAAIC,IAAgBC,EAAIC,IACpD,GACgB,iBAAPH,GACO,iBAAPE,GACO,iBAAPD,GACO,iBAAPE,EACP,CACA,MAAMW,EAAId,EAAKE,EACTa,EAAId,EAAKE,EACf,GAAIW,IAAMC,EACR,OAAsBX,KAAKY,IAAID,GAAxBX,KAAKY,IAAIF,GAIZb,EAAKE,EAAK,EACV,KACA,OALAH,EAAKE,EAAK,EACR,OACA,OAKV,CACA,MAAO,MACT,OC3GA,cAAsBvD,EAwBpBC,WAAAA,CAAYqE,GACVC,QAAQrE,KAxBVsE,WAAqB,IAAGtE,KACxBuE,gBAA0B,IAAGvE,KAC7BwE,kBAA4B,IAAGxE,KAC/ByE,kBAA4B,GAAEzE,KAC9B0E,kBAA4B,EAAC1E,KAC7B2E,cAAwB,GAAG3E,KAC3B4E,cAAwB,IAAG5E,KAC3B6E,cAAwB,IAAG7E,KAC3B8E,aAAuB,EAAC9E,KACxB+E,gBAA0B,EAAC/E,KAC3BgF,cAAwB,EAAChF,KACzBiF,eAIW,KAAIjF,KACfkF,aAAuB,EAAIlF,KAC3BmF,aAA6B,KAAInF,KACjCoF,mBAA6B,EAAIpF,KACjCqF,mBAA6B,EAAIrF,KACjCsF,cAAwC,KAAItF,KAC5CuF,UAAoC,KAAIvF,KACxCwF,UAAoC,KAGlCxF,KAAKyF,aAAarB,EACpB,CACAqB,YAAAA,CAAarB,GACX,MAAME,WACJA,EAAUC,gBACVA,EAAeC,kBACfA,EAAiBC,kBACjBA,EAAiBC,kBACjBA,EAAiBC,cACjBA,EAAaC,cACbA,EAAaC,cACbA,GACET,GAAW,CAAA,EACfpE,KAAKsE,WAAa7C,EAAU6C,EAAY,IAAK,GAC7CtE,KAAKuE,gBAAkB9C,EAAU8C,EAAiB,IAAK,GACvDvE,KAAKwE,kBAAoB/C,EAAU+C,EAAmB,IAAK,GAC3DxE,KAAKyE,kBAAoBhD,EAAUgD,EAAmB,GAAI,GAC1DzE,KAAK0E,kBAAoBjD,EAAUiD,EAAmB,EAAG,GACzD1E,KAAK2E,cAAgBlD,EAAUkD,EAAe,GAAK,GACnD3E,KAAK4E,cAAgBnD,EAAUmD,EAAe,IAAK,GACnD5E,KAAK6E,cAAgBpD,EAAUoD,EAAe,IAAK,EACrD,CACAa,aAAAA,CAAcC,GAAc,GAC1B3F,KAAKkF,aAAc,EACnBlF,KAAKoF,mBAAoB,EACzBpF,KAAKqF,mBAAoB,EACrBM,IACF3F,KAAKsF,cAAgB,MAEnBtF,KAAKgF,gBACPY,aAAa5F,KAAKgF,eAClBhF,KAAKgF,cAAgB,EAEzB,GC1Da,SAAS7C,EAAoBhB,GAC1C,MAAM0E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,KAEhB/D,OAAEA,EAAMU,QAAEA,GAAYb,EAAef,GAAO,GAE9C4B,GAEE/C,KAAKiF,iBACPW,aAAa5F,KAAKiF,eAAeoB,OACjCrG,KAAKiF,eAAeqB,WACpBtG,KAAKiF,eAAiB,MAExBjF,KAAKuF,UAAY,KACjBvF,KAAKwF,UAAY,OAEbxF,KAAKuF,YACPvF,KAAKuF,UAAUgB,SAAU,GAEvBvG,KAAKwF,YACPxF,KAAKwF,UAAUe,SAAU,IAK7B,IAAK,IAAIzF,EAAI,EAAGC,EAAMsB,EAAOrB,OAAYD,EAAJD,IAAWA,EAAG,CACjD,MAAM4B,EAAIL,EAAOvB,GACX0F,EAAI,CAAC9D,EAAEE,MAAOF,EAAEG,OAChB4D,EAAU,CACdC,MAAOF,EACPG,SAAUH,EACVI,QAASJ,EACT1D,WAAYJ,EAAEI,WACdyD,SAAS,GAENvG,KAAKuF,UAEEvF,KAAKwF,WAAaxF,KAAKuF,UAAUzC,aAAeJ,EAAEI,aAC5D9C,KAAKwF,UAAYiB,GAFjBzG,KAAKuF,UAAYkB,CAIrB,CAEAzG,KAAK0F,eAAc,GACnB1F,KAAKmF,aAAe,KACpBnF,KAAK8E,aAAe,EAEpB,MAAM+B,EAAW7G,KAAKuF,UAChBuB,EAAW9G,KAAKwF,UACtB,GAAIsB,GAAYD,EACd7G,KAAKsF,cAAgB,KACrBO,EAASK,SAAW,CAACW,EAAUC,GAC/BjB,EAASO,SAAW,IAAMvC,EAAUgD,EAASD,QAASE,EAASF,SAC/D5G,KAAKkB,KAAK,eAAgB2E,OAGvB,KAAIgB,EAsCP,OAtCiB,CACjBhB,EAASK,SAAW,CAACW,GACrBhB,EAASO,SAAW,IAAMS,EAASD,QACnC5G,KAAKkF,aAAc,EAEnBlF,KAAKgF,eAAiB+B,YAAW,KAE/B/G,KAAKkF,aAAc,EACnBlF,KAAKoF,mBAAoB,EACzBpF,KAAKqF,mBAAoB,EACzBrF,KAAKgF,cAAgB,EACrBhF,KAAKsF,cAAgB,KACrBO,EAASmB,SAAWhH,KAAKuE,gBACzBvE,KAAKkB,KAAK,UAAW2E,EAAS,GAC7B7F,KAAKuE,iBACR,MAAM0C,EAAejH,KAAKsF,cACpB4B,EAAiBlH,KAAK+E,gBAE1BmC,GACAD,GACA/D,EAAY+D,EAAaL,QAASC,EAASD,SAAW5G,KAAKyE,mBAI3DmB,aAAasB,GACblH,KAAK+E,gBAAkB,EACvB/E,KAAKoF,mBAAoB,EACzBpF,KAAKqF,mBAAoB,EACzBQ,EAASO,SAAW,IAAMa,EAAaL,UAEvC5G,KAAKsF,cAAgBuB,EAErB7G,KAAKoF,mBAAoB,EACzBpF,KAAKqF,mBAAoB,EAE7B,CAIA,CACArF,KAAKkB,KAAK,eAAgB2E,EAC5B,CCpGe,SAASsB,EAAkBhG,GACxC,MAAM0E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,IAElBpG,KAAKuF,YACPvF,KAAKuF,UAAUgB,SAAU,GAEvBvG,KAAKwF,YACPxF,KAAKwF,UAAUe,SAAU,GAG3B,MAAMlE,OAAEA,GAAWH,EAAef,GAClC,IAAK,IAAIL,EAAI,EAAGC,EAAMsB,EAAOrB,OAAYD,EAAJD,IAAWA,EAAG,CACjD,MAAM4B,EAAIL,EAAOvB,GACX0F,EAAI,CAAC9D,EAAEE,MAAOF,EAAEG,OAClB7C,KAAKuF,WAAavF,KAAKuF,UAAUzC,aAAeJ,EAAEI,YACpD9C,KAAKuF,UAAUgB,SAAU,EACzBvG,KAAKuF,UAAUoB,SAAW3G,KAAKuF,UAAUqB,QACzC5G,KAAKuF,UAAUqB,QAAUJ,GAChBxG,KAAKwF,WAAaxF,KAAKwF,UAAU1C,aAAeJ,EAAEI,aAC3D9C,KAAKwF,UAAUe,SAAU,EACzBvG,KAAKwF,UAAUmB,SAAW3G,KAAKwF,UAAUoB,QACzC5G,KAAKwF,UAAUoB,QAAUJ,EAE7B,CAEA,MAAMK,EAAW7G,KAAKuF,UAChBuB,EAAW9G,KAAKwF,UACtB,GACGqB,GAAY3D,EAAY2D,EAASH,MAAOG,EAASD,SAAW5G,KAAK0E,mBACjEoC,GAAY5D,EAAY4D,EAASJ,MAAOI,EAASF,SAAW5G,KAAK0E,kBAClE,CAIA,GAFA1E,KAAK0F,gBAEDoB,GAAYD,EAAU,CACxBhB,EAASK,SAAW,CAACW,EAAUC,GAC/B,MAAQJ,MAAOU,EAAQT,SAAUU,EAAWT,QAASU,GAAaT,GAC1DH,MAAOa,EAAQZ,SAAUa,EAAWZ,QAASa,GAAaX,EAE5DY,EAAU7D,EAAUyD,EAAUG,GAC9BE,EAAU9D,EAAUwD,EAAWG,GAC/BI,EAAU/D,EAAUuD,EAAQG,GAClC1B,EAASO,SAAYyB,GACN,UAAbA,EAAuBD,EAAuB,aAAbC,EAA0BF,EAAUD,EACvE7B,EAASiC,UAAY9D,EAAa2D,EAASD,GAC3C7B,EAASkC,cAAgB/D,EAAa4D,EAASF,GAC/C7B,EAASmC,OAASN,EAAQ,GAAKC,EAAQ,GACvC9B,EAASoC,MAAQP,EAAQ,GAAKE,EAAQ,GACtC/B,EAASqC,OAASR,EAAQ,GAAKC,EAAQ,GACvC9B,EAASsC,MAAQT,EAAQ,GAAKE,EAAQ,GAEtC,MAAMQ,EAAYlF,EAAYoE,EAAUG,GAClCY,EAAYnF,EAAYmE,EAAWG,GACnCc,EAAYpF,EAAYkE,EAAQG,GAClCe,EAAY,GAAKF,EAAY,GAAKC,EAAY,IAEhDxC,EAAS0C,MAAQH,EAAYC,EAC7BxC,EAAS2C,UAAYJ,EAAYE,GAQnC,IAAIG,EANW/E,EAAS4D,EAAUG,GACnB/D,EAAS2D,EAAWG,IAMtB,IAATiB,EAGFA,GAAS,IACAA,EAAQ,MAEjBA,GAAS,KAGX5C,EAAS4C,MAAQA,EAGjBzI,KAAK8E,cAAgB2D,EACrB5C,EAAS6C,UAAY1I,KAAK8E,aAC1B9E,KAAKkB,KAAK,SAAU2E,GAChByC,EAAY,GAAKF,EAAY,GAAKC,EAAY,GAChDrI,KAAKkB,KAAK,QAAS2E,GAErB7F,KAAKkB,KAAK,WAAY2E,GACtB7F,KAAKkB,KAAK,cAAe2E,EAC3B,KAEK,KAAIgB,EAgCP,OAhCiB,CACjBhB,EAASK,SAAW,CAACW,GACrB,MAAMH,MAAEA,EAAKC,SAAEA,EAAQC,QAAEA,GAAYC,EACrChB,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,EACtEf,EAASiC,UAAY9D,EAAa2C,EAAUC,GAC5Cf,EAASkC,cAAgB/D,EAAa0C,EAAOE,GAC7Cf,EAASmC,OAASpB,EAAQ,GAAKD,EAAS,GACxCd,EAASoC,MAAQrB,EAAQ,GAAKF,EAAM,GACpCb,EAASqC,OAAStB,EAAQ,GAAKD,EAAS,GACxCd,EAASsC,MAAQvB,EAAQ,GAAKF,EAAM,GACpC,MAAMiC,EAAa3C,KAAKC,MAElBd,EAAenF,KAAKmF,cAAgB,CAAC,GAAI,IAC7BwD,IAAexD,EAAa,GAAG,GAAKA,EAAa,GAAG,GAAGY,UAAY,IAAM,GAE3E/F,KAAK4E,gBAEnBO,EAAa,GAAKA,EAAa,GAC/BA,EAAa,GAAK,IAGpBA,EAAa,GAAGvE,KAAK,CACnBgI,MAAOhC,EACPb,UAAW4C,IAEb3I,KAAKmF,aAAeA,EAEpBnF,KAAKkB,KAAK,MAAO2E,EACnB,CAIA,CACA7F,KAAKkB,KAAK,cAAe2E,EAC3B,CACF,CCzHe,SAASgD,EAAkB1H,GACxC,MAAM0E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,IAGtB,IAAIS,EAAmC,KACnCC,EAAmC,KACnC9G,KAAKuF,YACPvF,KAAKuF,UAAUgB,SAAU,GAEvBvG,KAAKwF,YACPxF,KAAKwF,UAAUe,SAAU,GAG3B,MAAMlE,OAAEA,GAAWH,EAAef,GAClC,IAAK,IAAIL,EAAI,EAAGC,EAAMsB,EAAOrB,OAAYD,EAAJD,IAAWA,EAAG,CACjD,MAAM4B,EAAIL,EAAOvB,GACbd,KAAKuF,WAAavF,KAAKuF,UAAUzC,aAAeJ,EAAEI,YACpD9C,KAAKuF,UAAUgB,SAAU,EACzBM,EAAW7G,KAAKuF,UAChBvF,KAAKuF,UAAY,MACRvF,KAAKwF,WAAaxF,KAAKwF,UAAU1C,aAAeJ,EAAEI,aAC3D9C,KAAKwF,UAAUe,SAAU,EACzBO,EAAW9G,KAAKwF,UAChBxF,KAAKwF,UAAY,KAErB,CAcA,GAZIxF,KAAKwF,YAAcxF,KAAKuF,YAC1BvF,KAAKuF,UAAYvF,KAAKwF,UACtBxF,KAAKwF,UAAY,KACjBsB,EAAWD,EACXA,EAAW,MAGT7G,KAAKgF,gBACPY,aAAa5F,KAAKgF,eAClBhF,KAAKgF,cAAgB,GAGnBhF,KAAKuF,UAAW,CAClBM,EAASK,SAAW,CAAClG,KAAKuF,WACtBvF,KAAKwF,UAEPK,EAASK,SAAStF,KAAKZ,KAAKwF,WACnBsB,IAETjB,EAASM,cAAgB,CAACW,GAC1B9G,KAAK8E,aAAe,GAEtB,MAAM4B,EAAQ7C,EACZ7D,KAAKuF,UAAUmB,MACf1G,KAAKwF,UAAYxF,KAAKwF,UAAUkB,MAAQI,EAAWA,EAASJ,MAAQ,IAEhEC,EAAW9C,EACf7D,KAAKuF,UAAUoB,SACf3G,KAAKwF,UAAYxF,KAAKwF,UAAUmB,SAAWG,EAAWA,EAASH,SAAW,IAEtEC,EAAU/C,EACd7D,KAAKuF,UAAUqB,QACf5G,KAAKwF,UAAYxF,KAAKwF,UAAUoB,QAAUE,EAAWA,EAASF,QAAU,IAE1Ef,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,EACtE5G,KAAKkB,KAAK,aAAc2E,EAC1B,MAEK,GAAIgB,EAAU,CAEjBhB,EAASM,cAAgB,CAACU,GACtBC,GAEFjB,EAASM,cAAcvF,KAAKkG,GAE9B,MAAMJ,EAAQI,EAAWjD,EAAUgD,EAASH,MAAOI,EAASJ,OAASG,EAASH,MACxEC,EAAWG,EAAWjD,EAAUgD,EAASF,SAAUG,EAASH,UAAYE,EAASF,SACjFC,EAAUE,EAAWjD,EAAUgD,EAASD,QAASE,EAASF,SAAWC,EAASD,QAgBpF,GAfAf,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,EACjE5G,KAAKkF,cACRlF,KAAKkB,KAAK,MAAO2E,GACjB7F,KAAKkF,aAAc,GAEhBlF,KAAKoF,oBAERpF,KAAK+E,iBAAmBgC,YAAW,KACjC/G,KAAK+E,gBAAkB,EACvBc,EAASiD,UAAY9I,KAAKwE,kBAC1BxE,KAAKkB,KAAK,YAAa2E,EAAS,GAC/B7F,KAAKwE,mBACRxE,KAAKoF,mBAAoB,IAEtBpF,KAAKqF,kBAAmB,CAE3B,MAAM4B,EAAejH,KAAKsF,cACtB2B,IACFpB,EAASO,SAAW,IAAMa,EAAaL,SAEzCf,EAASkD,aAAe/I,KAAKwE,kBAC7BxE,KAAKkB,KAAK,YAAa2E,GACvB7F,KAAKsF,cAAgB,KACrBtF,KAAKqF,mBAAoB,CAC3B,CAEA,GAAIrF,KAAKmF,aAAc,CACrB,MAAO6D,EAAMC,GAAQjJ,KAAKmF,aAEpB+D,EAASD,EAAKA,EAAKjI,OAAS,GAElC,GAAIgF,KAAKC,MAAQiD,EAAOnD,WAAa/F,KAAK6E,cAAe,CAEvD,IAAIsE,EAAWF,EAAK,GACpB,IAAK,IAAInI,EAAIkI,EAAKhI,OAAS,EAAGF,GAAK,GAC7BoI,EAAOnD,UAAYiD,EAAKlI,GAAGiF,WAAa/F,KAAK4E,cADb9D,IAElCqI,EAAWH,EAAKlI,GAMpB,MAAMsI,GJxBcC,EIyBlBH,EAAOnD,UAAYoD,EAASpD,UJvBd,iBAFuBuD,EI0BrCpG,EAAYiG,EAASP,MAAOM,EAAON,SJvB5B,IAAbU,GACqB,iBAAdD,GACO,IAAdA,EAEO,EAEFC,EAAWD,GIoBZ,GAAID,EAAWpJ,KAAK2E,cAAe,CAEjC,MAAM8D,EAAQ/E,EAASyF,EAASP,MAAOM,EAAON,OAE9C/C,EAASiC,UAAY9D,EAAamF,EAASP,MAAOM,EAAON,OACzD/C,EAAS4C,MAAQA,EACjB5C,EAASuD,SAAWA,EAOpBvD,EAAS0D,cAAgB,CAACC,EAAgBC,EAAoBL,KAE5D,IAAIM,EAAW,EACXC,EAAe,EACfL,EAAW,EACXE,EAAS,GACXE,EAAWF,EACXG,EAAeF,EAAYC,EAC3BJ,EAAYG,EAAYC,EAAY,GAG7BF,EAAS,IAChBG,EAAeH,EACfE,EAAWD,EAAYE,EACvBL,EAAYG,EAAYA,GAAc,EAAIE,IAE5C,MAAOC,EAAUC,GJ7CtB,SAAmBnI,EAAe+G,GACvC,GAAqB,iBAAV/G,GAAuC,iBAAV+G,EACtC,MAAO,CAAC,EAAG,GAEb,MAAMqB,EAAOrB,EAAQlF,KAAKK,GAAM,IAChC,MAAO,CAAClC,EAAQ6B,KAAKwG,IAAID,GAAMpI,EAAQ6B,KAAKyG,IAAIF,GAClD,CIuCyCG,CAAUX,EAAUb,GACjD,MAAO,CACLiB,WACAE,WACAC,WACAF,eACD,EAWH3J,KAAKkB,KAAK,QAAS2E,GACnB7F,KAAKmF,aAAe,IACtB,CACF,CACF,CACF,CJhFK,IAAqBkE,EAAmBC,EIiF7CtJ,KAAKkB,KAAK,aAAc2E,EAU1B,CCxMe,SAASqE,EAAqB/I,GAC3CnB,KAAKkB,KAAK,gBAAiB,CACzB4E,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,KAEtByC,EAAMrI,KAAMR,KAAOmB,EACrB,CCLe,SAASgJ,EAAmBhJ,GACzC,MAAMiJ,EAAOpK,KAgBb,SAASqK,IACe,oBAAXvI,SACTA,OAAOwI,oBAAoB,YAAaC,GACxCzI,OAAOwI,oBAAoB,UAAWE,GACtC1I,OAAOwI,oBAAoB,OAAQG,GACnC3I,OAAOwI,oBAAoB,YAAaI,GACpC,kBAAmB5I,OAAOG,SAAS0I,iBACrC7I,OAAOwI,oBAAoB,cAAeI,GAGhD,CACA,SAASD,EAAOG,GACdA,EAAEC,iBACFD,EAAEE,kBACFT,GACF,CACA,SAASK,EAAYE,GACnBA,EAAEC,iBACFD,EAAEE,iBACJ,CACA,SAASP,EAAWK,GAClB,GAAqB,IAAjBzJ,EAAM4J,OACR5D,EAAM3G,KAAM4J,EAAOQ,OACd,CACL,MAAM/E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,IAEhBwC,EAAQ,CAACgC,EAAEhI,MAAOgI,EAAE/H,OAC1B,GAAIuH,EAAK7E,UAAW,CAClB6E,EAAK7E,UAAUoB,SAAWyD,EAAK7E,UAAUqB,QACzCwD,EAAK7E,UAAUqB,QAAUgC,EACzB/C,EAASK,SAAW,CAACkE,EAAK7E,WAC1B,MAAMmB,MAAEA,EAAKC,SAAEA,EAAQC,QAAEA,GAAYwD,EAAK7E,UAC1CM,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,EACtEf,EAASiC,UAAY9D,EAAa2C,EAAUC,GAC5Cf,EAASkC,cAAgB/D,EAAa0C,EAAOE,GAC7Cf,EAASmC,OAASpB,EAAQ,GAAKD,EAAS,GACxCd,EAASoC,MAAQrB,EAAQ,GAAKF,EAAM,GACpCb,EAASqC,OAAStB,EAAQ,GAAKD,EAAS,GACxCd,EAASsC,MAAQvB,EAAQ,GAAKF,EAAM,GAEpCb,EAAS4C,MAAQ5C,EAASmC,OAAS,EACnCnC,EAAS6C,UAAY7C,EAASoC,MAAQ,EACtCmC,EAAKlJ,KAAK,SAAU2E,EACtB,CACF,CACF,CACA,SAAS2E,EAAWI,GAElB,GADAP,IACqB,IAAjBlJ,EAAM4J,OACRlC,EAAMrI,KAAM4J,EAAOQ,OACd,CACL,MAAM/E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,IAEhBwC,EAAQ,CAACgC,EAAEhI,MAAOgI,EAAE/H,OAC1B,GAAIuH,EAAK7E,UAAW,CAClB,MAAMsB,EAAWuD,EAAK7E,UACtB6E,EAAK7E,UAAY,KACjBsB,EAASF,SAAWE,EAASD,QAC7BC,EAASD,QAAUgC,EACnB/C,EAASM,cAAgB,CAACU,GAC1B,MAAMH,MAAEA,EAAKC,SAAEA,EAAQC,QAAEA,GAAYC,EACrChB,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,CACxE,CACAf,EAAS4C,MAAQ,IACjB2B,EAAKlJ,KAAK,SAAU2E,EACtB,CACF,CACA,GA9FsB,oBAAX/D,SACTA,OAAOkJ,iBAAiB,YAAaT,GACrCzI,OAAOkJ,iBAAiB,UAAWR,GACnC1I,OAAOkJ,iBAAiB,OAAQP,GAChC3I,OAAOkJ,iBAAiB,YAAaN,EAAa,CAChDO,SAAS,EACTC,SAAS,IAEP,kBAAmBpJ,OAAOG,SAAS0I,iBACrC7I,OAAOkJ,iBAAiB,cAAeN,EAAa,CAClDO,SAAS,EACTC,SAAS,KAmFM,IAAjB/J,EAAM4J,OACR5I,EAAQ3B,KAAM4J,EAAOjJ,OAChB,CAEDiJ,EAAKnF,iBACPW,aAAawE,EAAKnF,eAAeoB,OACjC+D,EAAKnF,eAAeqB,WACpB8D,EAAKnF,eAAiB,MAExB,MAAM2D,EAAQ,CAACzH,EAAMyB,MAAOzB,EAAM0B,OAClCuH,EAAK7E,UAAY,CACfmB,MAAOkC,EACPjC,SAAUiC,EACVhC,QAASgC,EACT9F,YAAa,EACbyD,SAAS,EAEb,CACF,CCtHe,SAAS4E,EAAoBhK,GAC1C,MAAM0E,EAA0B,CAC9BC,YAAa3E,EACb4E,UAAWC,KAAKC,MAChBC,SAAU,GACVC,cAAe,GACfC,SAAUA,IAAM,CAAC,EAAG,IAEhBwC,EAAQ,CAACzH,EAAMyB,MAAOzB,EAAM0B,OAC9B7C,KAAKiF,gBACHjF,KAAKuF,YACPvF,KAAKuF,UAAUoB,SAAW3G,KAAKuF,UAAUqB,QACzC5G,KAAKuF,UAAUqB,QAAUgC,GAE3BhD,aAAa5F,KAAKiF,eAAeoB,QAGjCrG,KAAKuF,UAAY,CACfmB,MAAOkC,EACPjC,SAAUiC,EACVhC,QAASgC,EACT9F,YAAa,EACbyD,SAAS,GAIb,MAAMD,EAAWA,KACftG,KAAKuF,UAAY,KACjBvF,KAAKiF,eAAiB,KACtBY,EAASE,UAAYC,KAAKC,MAE1BJ,EAAS0C,MAAQ,IACjBvI,KAAKkB,KAAK,QAAS2E,EAAS,EAQ9B,GALA7F,KAAKiF,eAAiB,CACpBqB,WACAD,OAAQU,WAAWT,EAAUtG,KAAKsE,YAClCiE,MAAOvI,KAAKiF,eAAiBjF,KAAKiF,eAAesD,MAAQ,GAEvDvI,KAAKuF,UAAW,CAClBM,EAASK,SAAW,CAAClG,KAAKuF,WAC1B,MAAMmB,MAAEA,EAAKC,SAAEA,EAAQC,QAAEA,GAAY5G,KAAKuF,UAC1CM,EAASO,SAAYyB,GACN,UAAbA,EAAuBnB,EAAqB,aAAbmB,EAA0BlB,EAAWC,EACtE,MAAM2B,EAAQhF,KAAKE,IACjB,GACCtC,EAAM+G,QAA8B,IAApB/G,EAAMiK,UAAkB,IAAOjK,EAAMiK,UAAY,EAAI,OAExEpL,KAAKiF,eAAesD,OAASA,EAC7B1C,EAAS2C,UAAYxI,KAAKiF,eAAesD,MACzC1C,EAAS0C,MAAQA,EACjBvI,KAAKkB,KAAK,QAAS2E,EACrB,CACF,CCpDA,MAAMwF,UAAgBC,EAGpBvL,WAAAA,CAAYwL,EAAmBnH,GAC7BC,MAAMD,GAASpE,KAHjBuL,QAA0B,KAAIvL,KAC9BwL,QAA+B,KAG7B,MAAMC,EClB0gE,SAAWb,GAAG,IAAIlI,EAAEkI,EAAE,MAAM,iBAAiBA,IAAIlI,EAAET,SAASyJ,cAAcd,IAAI,mBAAmBA,IAAIlI,EAAEkI,KAAKlI,GAAG,IAAI,CDkBlnEiJ,CAAWJ,GAC5B,IAAKE,EACH,MAAUG,MAAM,qCAIlB,GAFA5L,KAAKuL,QAAUE,EAEX5J,IAAe,CACjB,MAAMgK,EAAe1J,EAAQ2J,KAAK9L,MAC5B+L,EAAa5E,EAAM2E,KAAK9L,MACxBgM,EAAanD,EAAMiD,KAAK9L,MACxBiM,EAAgB/B,EAAS4B,KAAK9L,MACpCyL,EAAST,iBAAiB,aAAca,GAAc,GACtDJ,EAAST,iBAAiB,YAAae,GAAY,GACnDN,EAAST,iBAAiB,WAAYgB,GAAY,GAClDP,EAAST,iBAAiB,cAAeiB,GAAe,GACxDjM,KAAKwL,QAAU,KACbC,EAASnB,oBAAoB,aAAcuB,GAC3CJ,EAASnB,oBAAoB,YAAayB,GAC1CN,EAASnB,oBAAoB,WAAY0B,GACzCP,EAASnB,oBAAoB,cAAe2B,EAAc,CAE9D,KAAO,CAEL,MAAMC,EAAc/B,EAAO2B,KAAK9L,MAC1BmM,EAAehB,EAAQW,KAAK9L,MAClCyL,EAAST,iBAAiB,YAAakB,GAAa,GACpDT,EAAST,iBAAiB,QAASmB,GAAc,GACjDnM,KAAKwL,QAAU,KACbC,EAASnB,oBAAoB,YAAa4B,GAC1CT,EAASnB,oBAAoB,QAAS6B,EAAa,CAEvD,CACF,CACAC,OAAAA,GAEE/H,MAAM5D,MAEFT,KAAKwL,UACPxL,KAAKwL,UACLxL,KAAKwL,QAAU,KACfxL,KAAKuL,QAAU,KAEnB","x_google_ignoreList":[10]}